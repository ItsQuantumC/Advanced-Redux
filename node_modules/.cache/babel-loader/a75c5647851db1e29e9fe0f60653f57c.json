{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState: {\n    items: [],\n    totalQuantity: 0\n  },\n  reducers: {\n    addItemToCart(state, action) {\n      const newItem = action.payload;\n      const exItem = state.items.find(item => item.id === newItem.id);\n      state.totalQuantity++;\n\n      if (!exItem) {\n        state.items.push({\n          itemId: newItem.id,\n          price: newItem.price,\n          quantity: 1,\n          totalPrice: newItem.price,\n          name: newItem.title\n        });\n      } else {\n        exItem.quantity = exItem.quantity++;\n        exItem.totalPrice = exItem.totalPrice + newItem.price;\n      }\n    },\n\n    removeItemFromCart(state, action) {\n      const id = action.payload;\n      const exItem = state.items.find(item => item.id === id);\n      state.totalQuantity--;\n\n      if (exItem.quantity === 1) {\n        state.items = state.items.filter(item => item.id !== id);\n      } else {\n        exItem.quantity--;\n        exItem.totalPrice = exItem.totalPrice - exItem.price;\n      }\n    }\n\n  }\n});\nexport default cartSlice;\nexport const cartAction = cartSlice.actions;","map":{"version":3,"sources":["/Users/omkar/Desktop/Advanced Redux/src/components/store/cart-slice.js"],"names":["createSlice","cartSlice","name","initialState","items","totalQuantity","reducers","addItemToCart","state","action","newItem","payload","exItem","find","item","id","push","itemId","price","quantity","totalPrice","title","removeItemFromCart","filter","cartAction","actions"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,SAAS,GAAGD,WAAW,CAAC;AAC1BE,EAAAA,IAAI,EAAE,MADoB;AAE1BC,EAAAA,YAAY,EAAE;AACVC,IAAAA,KAAK,EAAE,EADG;AAEVC,IAAAA,aAAa,EAAE;AAFL,GAFY;AAM1BC,EAAAA,QAAQ,EAAE;AACNC,IAAAA,aAAa,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACzB,YAAMC,OAAO,GAAGD,MAAM,CAACE,OAAvB;AACA,YAAMC,MAAM,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYL,OAAO,CAACK,EAA7C,CAAf;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAG,CAACO,MAAJ,EAAW;AACPJ,QAAAA,KAAK,CAACJ,KAAN,CAAYY,IAAZ,CAAiB;AAACC,UAAAA,MAAM,EAAEP,OAAO,CAACK,EAAjB;AAAqBG,UAAAA,KAAK,EAAER,OAAO,CAACQ,KAApC;AAA2CC,UAAAA,QAAQ,EAAE,CAArD;AAAwDC,UAAAA,UAAU,EAAEV,OAAO,CAACQ,KAA5E;AAAmFhB,UAAAA,IAAI,EAAEQ,OAAO,CAACW;AAAjG,SAAjB;AACH,OAFD,MAEO;AACHT,QAAAA,MAAM,CAACO,QAAP,GAAkBP,MAAM,CAACO,QAAP,EAAlB;AACAP,QAAAA,MAAM,CAACQ,UAAP,GAAoBR,MAAM,CAACQ,UAAP,GAAoBV,OAAO,CAACQ,KAAhD;AACH;AACJ,KAXK;;AAYNI,IAAAA,kBAAkB,CAACd,KAAD,EAAQC,MAAR,EAAgB;AAC9B,YAAMM,EAAE,GAAGN,MAAM,CAACE,OAAlB;AACA,YAAMC,MAAM,GAAGJ,KAAK,CAACJ,KAAN,CAAYS,IAAZ,CAAiBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYA,EAArC,CAAf;AACAP,MAAAA,KAAK,CAACH,aAAN;;AACA,UAAIO,MAAM,CAACO,QAAP,KAAoB,CAAxB,EAA2B;AACvBX,QAAAA,KAAK,CAACJ,KAAN,GAAcI,KAAK,CAACJ,KAAN,CAAYmB,MAAZ,CAAmBT,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAWA,EAAtC,CAAd;AACH,OAFD,MAEO;AACHH,QAAAA,MAAM,CAACO,QAAP;AACAP,QAAAA,MAAM,CAACQ,UAAP,GAAoBR,MAAM,CAACQ,UAAP,GAAoBR,MAAM,CAACM,KAA/C;AACH;AACJ;;AAtBK;AANgB,CAAD,CAA7B;AAgCA,eAAejB,SAAf;AACA,OAAO,MAAMuB,UAAU,GAAGvB,SAAS,CAACwB,OAA7B","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nconst cartSlice = createSlice({\n    name: 'cart',\n    initialState: {\n        items: [],\n        totalQuantity: 0,\n    },\n    reducers: {\n        addItemToCart(state, action) {\n            const newItem = action.payload;\n            const exItem = state.items.find(item => item.id === newItem.id)\n            state.totalQuantity++;\n            if(!exItem){\n                state.items.push({itemId: newItem.id, price: newItem.price, quantity: 1, totalPrice: newItem.price, name: newItem.title});\n            } else {\n                exItem.quantity = exItem.quantity++;\n                exItem.totalPrice = exItem.totalPrice + newItem.price;\n            }\n        },\n        removeItemFromCart(state, action) {\n            const id = action.payload;\n            const exItem = state.items.find(item => item.id === id);\n            state.totalQuantity--;\n            if (exItem.quantity === 1) {\n                state.items = state.items.filter(item => item.id!== id)\n            } else {\n                exItem.quantity--;\n                exItem.totalPrice = exItem.totalPrice - exItem.price;\n            }\n        }\n    }\n})\n\nexport default cartSlice;\nexport const cartAction = cartSlice.actions;"]},"metadata":{},"sourceType":"module"}